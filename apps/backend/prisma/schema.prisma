generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  clerk_id      String?
  display_name  String
  profile_image String
  target        String
  is_active     Boolean  @default(true)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // リレーション
  activities           Activity[]
  weekly_targets       WeeklyTarget[]
  sent_friendships     Friendship[]   @relation("SentFriendships")
  received_friendships Friendship[]   @relation("ReceivedFriendships")

  @@map("users")
}

model Activity {
  id            Int      @id @default(autoincrement())
  user_id       Int
  activity_date DateTime
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // リレーション
  user             User             @relation(fields: [user_id], references: [id])
  activity_details ActivityDetail[]

  @@index([user_id])
  @@map("activities")
}

model ActivityDetail {
  id               Int      @id @default(autoincrement())
  activity_id      Int
  description      String
  duration_minutes Int
  category         String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  // リレーション
  activity Activity @relation(fields: [activity_id], references: [id])

  @@index([activity_id])
  @@map("activity_details")
}

enum WeeklyTargetStatus {
  pending
  started
  completed
}

model WeeklyTarget {
  id                Int                @id @default(autoincrement())
  user_id           Int
  title             String
  description       String
  target_start_date DateTime
  target_end_date   DateTime
  actual_start_date DateTime?
  actual_end_date   DateTime?
  status            WeeklyTargetStatus @default(pending)
  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt

  // リレーション
  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@map("weekly_targets")
}

enum FriendshipStatus {
  pending
  accepted
  rejected
}

model Friendship {
  id          Int              @id @default(autoincrement())
  sender_id   Int
  receiver_id Int
  status      FriendshipStatus @default(pending)
  created_at  DateTime         @default(now())
  updated_at  DateTime         @updatedAt

  // リレーション
  sender   User @relation("SentFriendships", fields: [sender_id], references: [id])
  receiver User @relation("ReceivedFriendships", fields: [receiver_id], references: [id])

  @@unique([sender_id, receiver_id])
  @@index([sender_id])
  @@index([receiver_id])
  @@map("friendships")
}
